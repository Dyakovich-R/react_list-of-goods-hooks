{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","SortField","App","_useState","useState","_useState2","_slicedToArray","sortField","setSortField","_useState3","_useState4","reverse","setReversed","visibleGoods","goodsFrom","goods","_toConsumableArray","sort","a","b","NAME","localeCompare","LENGTH","length","getPreparedGoods","reset","getReset","setSort","field","_jsx","_Fragment","children","_jsxs","className","type","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"uOAIaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGGC,EAAS,SAATA,GAAS,OAATA,EAAS,YAATA,EAAS,gBAATA,CAAS,EAATA,GAAS,IAsCP,IAAMC,EAAgB,WAC3B,IAAAC,EAAkCC,mBAAyB,IAAGC,EAAAC,YAAAH,EAAA,GAAvDI,EAASF,EAAA,GAAEG,EAAYH,EAAA,GAC9BI,EAA+BL,oBAAkB,GAAMM,EAAAJ,YAAAG,EAAA,GAAhDE,EAAOD,EAAA,GAAEE,EAAWF,EAAA,GAErBG,EArCiB,SACvBC,EACAP,EACAI,GAEA,IAAMI,EAAKC,YAAOF,GAqBlB,OAnBIP,GACFQ,EAAME,MAAK,SAACC,EAAGC,GACb,OAAQZ,GACN,KAAKN,EAAUmB,KACb,OAAOF,EAAEG,cAAcF,GAEzB,KAAKlB,EAAUqB,OACb,OAAOJ,EAAEK,OAASJ,EAAEI,OAEtB,QACE,OAAO,EAEb,IAGEZ,GACFI,EAAMJ,UAGDI,CACT,CAUuBS,CAAiBxB,EAAiBO,EAAWI,GAC5Dc,EATR,SAAkBlB,EAA2BI,GAC3C,MAAqB,KAAdJ,GAAoBI,CAC7B,CAOgBe,CAASnB,EAAWI,GAO5BgB,EAAU,SAACC,GAAgB,OAAK,WACpCpB,EAAaoB,EACf,CAAE,EAMF,OACEC,cAAAC,WAAA,CAAAC,SACEC,eAAA,OAAKC,UAAU,kBAAiBF,SAAA,CAC9BC,eAAA,OAAKC,UAAU,UAASF,SAAA,CACtBF,cAAA,UACEK,KAAK,SACLD,UACE1B,IAAcN,EAAUmB,KACpB,iBACA,0BAENe,QAASR,EAAQ1B,EAAUmB,MAAMW,SAClC,wBAIDF,cAAA,UACEK,KAAK,SACLD,UACE1B,IAAcN,EAAUqB,OACpB,iBACA,0BAENa,QAASR,EAAQ1B,EAAUqB,QAAQS,SACpC,mBAIDF,cAAA,UACEK,KAAK,SACLD,UAAWtB,EAAU,iBAAmB,0BACxCwB,QAnCQ,WAChBvB,GAAaD,EACf,EAiC6BoB,SACpB,YAIAN,GACCI,cAAA,UACEK,KAAK,SACLD,UAAU,4BACVE,QArDM,WAChBvB,GAAY,GACZJ,EAAa,GACf,EAkD+BuB,SACpB,aAMLF,cAAA,MAAAE,SACGlB,EAAauB,KAAI,SAAAC,GAAI,OACpBR,cAAA,MAEE,UAAQ,OAAME,SAEbM,GAHIA,EAIF,UAMjB,ECpIAC,IAASC,OACPV,cAAC3B,EAAG,IACJsC,SAASC,eAAe,Q","file":"static/js/main.385b0275.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortField {\n  NAME = 'name',\n  LENGTH = 'length',\n}\n\nconst getPreparedGoods = (\n  goodsFrom: string[],\n  sortField: SortField | '',\n  reverse: boolean,\n): string[] => {\n  const goods = [...goodsFrom];\n\n  if (sortField) {\n    goods.sort((a, b) => {\n      switch (sortField) {\n        case SortField.NAME:\n          return a.localeCompare(b);\n\n        case SortField.LENGTH:\n          return a.length - b.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (reverse) {\n    goods.reverse();\n  }\n\n  return goods;\n};\n\nfunction getReset(sortField: SortField | '', reverse: boolean): boolean {\n  return sortField !== '' || reverse;\n}\n\nexport const App: React.FC = () => {\n  const [sortField, setSortField] = useState<SortField | ''>('');\n  const [reverse, setReversed] = useState<boolean>(false);\n\n  const visibleGoods = getPreparedGoods(goodsFromServer, sortField, reverse);\n  const reset = getReset(sortField, reverse);\n\n  const resetSort = () => {\n    setReversed(false);\n    setSortField('');\n  };\n\n  const setSort = (field: SortField) => () => {\n    setSortField(field);\n  };\n\n  const onReverse = () => {\n    setReversed(!reverse);\n  };\n\n  return (\n    <>\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={\n              sortField === SortField.NAME\n                ? 'button is-info'\n                : 'button is-info is-light'\n            }\n            onClick={setSort(SortField.NAME)}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={\n              sortField === SortField.LENGTH\n                ? 'button is-info'\n                : 'button is-info is-light'\n            }\n            onClick={setSort(SortField.LENGTH)}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={reverse ? 'button is-info' : 'button is-info is-light'}\n            onClick={onReverse}\n          >\n            Reverse\n          </button>\n\n          {reset && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={resetSort}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          {visibleGoods.map(good => (\n            <li\n              key={good}\n              data-cy=\"Good\"\n            >\n              {good}\n            </li>\n          ))}\n        </ul>\n      </div>\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}